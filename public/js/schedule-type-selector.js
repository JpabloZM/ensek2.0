/**
 * Script para manejar la selecci√≥n entre agendamiento directo y agendamiento con solicitud previa
 * Este script es cr√≠tico para asegurar que se muestre el modal correcto
 */

document.addEventListener("DOMContentLoaded", function() {
    console.log("üîÑ Schedule Type Selector iniciado");
    
    // Funci√≥n principal para manejar la selecci√≥n de tipo de agendamiento
    function setupScheduleTypeSelection() {
        console.log("üõ†Ô∏è Configurando selector de tipo de agendamiento");
        
        // Verificar que los modales existen
        const modalSolicitud = document.getElementById("newScheduleModal");
        const modalDirecto = document.getElementById("newDirectScheduleModal");
        
        if (!modalSolicitud) {
            console.error("‚ùå Modal de solicitud existente no encontrado");
        }
        
        if (!modalDirecto) {
            console.error("‚ùå Modal de agendamiento directo no encontrado");
        }
        
        // M√©todo global para abrir el modal directo desde cualquier parte
        window.abrirModalDirecto = function(data = {}) {
            console.log("üöÄ Ejecutando funci√≥n global abrirModalDirecto()", data);
            
            if (!modalDirecto) {
                console.error("‚ùå Modal directo no encontrado en la funci√≥n global");
                return false;
            }
            
            // Preparar datos para el modal si se proporcionan
            if (data.technicianId) {
                const techSelect = document.getElementById("direct_technician_id");
                if (techSelect) techSelect.value = data.technicianId;
            }
            
            if (data.date) {
                const dateInput = document.getElementById("direct_scheduled_date");
                if (dateInput) dateInput.value = data.date;
            }
            
            if (data.startTime) {
                const startInput = document.getElementById("direct_start_time");
                if (startInput) startInput.value = data.startTime;
            }
            
            if (data.endTime) {
                const endInput = document.getElementById("direct_end_time");
                if (endInput) endInput.value = data.endTime;
            }
            
            // Intentar abrir el modal de m√∫ltiples formas para mayor compatibilidad
            try {
                // M√©todo 1: Bootstrap 5 nativo
                const directModal = new bootstrap.Modal(modalDirecto);
                directModal.show();
                console.log("‚úÖ Modal abierto con m√©todo Bootstrap 5 nativo");
                return true;
            } catch (error) {
                console.warn("‚ö†Ô∏è Error al abrir modal con m√©todo nativo:", error);
                
                try {
                    // M√©todo 2: jQuery si est√° disponible
                    if (window.jQuery) {
                        jQuery(modalDirecto).modal('show');
                        console.log("‚úÖ Modal abierto con m√©todo jQuery");
                        return true;
                    }
                } catch (jqError) {
                    console.warn("‚ö†Ô∏è Error al abrir modal con jQuery:", jqError);
                }
                
                try {
                    // M√©todo 3: Disparar evento en bot√≥n auxiliar
                    const btnAux = document.getElementById("btnOpenDirectModal");
                    if (btnAux) {
                        btnAux.click();
                        console.log("‚úÖ Modal abierto con bot√≥n auxiliar");
                        return true;
                    }
                } catch (btnError) {
                    console.warn("‚ö†Ô∏è Error al usar bot√≥n auxiliar:", btnError);
                }
                
                console.error("‚ùå No se pudo abrir el modal directo");
                return false;
            }
        };
        
        // Funci√≥n para manejar click en bot√≥n "Crear Servicio Nuevo" en la selecci√≥n SweetAlert
        window.handleNewDirectService = function(data = {}) {
            console.log("üîÑ Manejando selecci√≥n de servicio nuevo directo", data);
            
            // Cerrar el di√°logo de SweetAlert si est√° abierto
            if (window.Swal && Swal.isVisible()) {
                Swal.close();
            }
            
            // Intentar abrir el modal con los datos proporcionados
            return window.abrirModalDirecto(data);
        };
        
        // Configurar un bot√≥n de prueba en la p√°gina para abrir el modal directo
        const testButton = document.getElementById("testDirectModalBtn");
        if (testButton) {
            testButton.addEventListener("click", function() {
                console.log("üß™ Bot√≥n de prueba clickeado");
                window.abrirModalDirecto();
            });
        }
    }
    
    // Iniciar la configuraci√≥n con un peque√±o delay para asegurar que todos los elementos est√°n cargados
    setTimeout(setupScheduleTypeSelection, 500);
});